<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns0="http://www.oracle.com/soasample"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:client="http://xmlns.oracle.com/OrderToShipment/OrderProcessing/OrderProcess"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/OrderProcess.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Order" namespace="http://www.oracle.com/soasample"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/OrderProcess.wsdl"/>
        <oracle-xsl-mapper:rootElement name="Order" namespace="http://www.oracle.com/soasample"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [SAT FEB 20 11:31:35 IST 2016].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:variable name="ON" select="xp20:format-dateTime(xp20:current-dateTime(),'[Y][M][D][H][m][s][ss]')"/>
  <xsl:template match="/">
    <ns0:Order>
      <xsl:choose>
        <xsl:when test="/ns0:Order/ns0:OrderNumber">
          <ns0:OrderNumber>
            <xsl:value-of select="/ns0:Order/ns0:OrderNumber"/>
          </ns0:OrderNumber>
        </xsl:when>
        <xsl:otherwise>
          <ns0:OrderNumber>
            <xsl:value-of select="$ON"/>
          </ns0:OrderNumber>
        </xsl:otherwise>
      </xsl:choose>
      <ns0:OrderDate>
        <xsl:value-of select="xp20:current-dateTime ( )"/>
      </ns0:OrderDate>
      <ns0:Billing>
        <ns0:CardPaymentType>
          <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:CardPaymentType"/>
        </ns0:CardPaymentType>
        <ns0:CardNum>
          <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:CardNum"/>
        </ns0:CardNum>
        <ns0:ExpireDate>
          <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:ExpireDate"/>
        </ns0:ExpireDate>
        <ns0:CardName>
          <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:CardName"/>
        </ns0:CardName>
        <ns0:BillingAddress>
          <ns0:FirstName>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:FirstName"/>
          </ns0:FirstName>
          <ns0:LastName>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:LastName"/>
          </ns0:LastName>
          <ns0:AddressLine>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:AddressLine"/>
          </ns0:AddressLine>
          <ns0:City>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:City"/>
          </ns0:City>
          <ns0:State>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:State"/>
          </ns0:State>
          <ns0:ZipCode>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:ZipCode"/>
          </ns0:ZipCode>
          <ns0:PhoneNumber>
            <xsl:value-of select="/ns0:Order/ns0:Billing/ns0:BillingAddress/ns0:PhoneNumber"/>
          </ns0:PhoneNumber>
        </ns0:BillingAddress>
          <ns0:AuthorizationAmount>2000</ns0:AuthorizationAmount>
      </ns0:Billing>
      <ns0:Shipping>
        <xsl:choose>
          <xsl:when test="/ns0:Order/ns0:OrderNumber">
            <ns0:OrderNumber>
              <xsl:value-of select="/ns0:Order/ns0:OrderNumber"/>
            </ns0:OrderNumber>
          </xsl:when>
          <xsl:otherwise>
            <ns0:OrderNumber>
              <xsl:value-of select="$ON"/>
            </ns0:OrderNumber>
          </xsl:otherwise>
        </xsl:choose>
        <ns0:Address>
          <ns0:FirstName>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:FirstName"/>
          </ns0:FirstName>
          <ns0:LastName>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:LastName"/>
          </ns0:LastName>
          <ns0:AddressLine>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:AddressLine"/>
          </ns0:AddressLine>
          <ns0:City>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:City"/>
          </ns0:City>
          <ns0:State>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:State"/>
          </ns0:State>
          <ns0:ZipCode>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:ZipCode"/>
          </ns0:ZipCode>
          <ns0:PhoneNumber>
            <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:Address/ns0:PhoneNumber"/>
          </ns0:PhoneNumber>
        </ns0:Address>
        <ns0:ShippingSpeed>
          <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:ShippingSpeed"/>
        </ns0:ShippingSpeed>
        <xsl:if test="/ns0:Order/ns0:Shipping/ns0:ShippingProvider">
          <ns0:ShippingProvider>
            <ns0:Name>
              <xsl:if test="/ns0:Order/ns0:Shipping/ns0:ShippingProvider/ns0:Name/@xsi:nil">
                <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                  <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:ShippingProvider/ns0:Name/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:ShippingProvider/ns0:Name"/>
            </ns0:Name>
          </ns0:ShippingProvider>
        </xsl:if>
        <ns0:ShipMethod>
          <xsl:value-of select="/ns0:Order/ns0:Shipping/ns0:ShipMethod"/>
        </ns0:ShipMethod>
        <ns0:Status>New</ns0:Status>
      </ns0:Shipping>
      <ns0:Email>
        <xsl:value-of select="/ns0:Order/ns0:Email"/>
      </ns0:Email>
      <ns0:Items>
        <xsl:for-each select="/ns0:Order/ns0:Items/ns0:Item">
          <ns0:Item>
            <ns0:SKU>
              <xsl:value-of select="ns0:SKU"/>
            </ns0:SKU>
            <ns0:Quantity>
              <xsl:value-of select="ns0:Quantity"/>
            </ns0:Quantity>
            <ns0:UnitPrice>
              <xsl:value-of select="ns0:UnitPrice"/>
            </ns0:UnitPrice>
            <ns0:Brand>
              <xsl:if test="ns0:Brand/@xsi:nil">
                <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                  <xsl:value-of select="ns0:Brand/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:Brand"/>
            </ns0:Brand>
            <ns0:Model>
              <xsl:if test="ns0:Model/@xsi:nil">
                <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                  <xsl:value-of select="ns0:Model/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:Model"/>
            </ns0:Model>
            <ns0:Category>
              <xsl:if test="ns0:Category/@xsi:nil">
                <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                  <xsl:value-of select="ns0:Category/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:Category"/>
            </ns0:Category>
            <ns0:Description>
              <xsl:if test="ns0:Description/@xsi:nil">
                <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                  <xsl:value-of select="ns0:Description/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="ns0:Description"/>
            </ns0:Description>
          </ns0:Item>
        </xsl:for-each>
      </ns0:Items>
      <ns0:Status>"New"</ns0:Status>
    </ns0:Order>
  </xsl:template>
</xsl:stylesheet>
